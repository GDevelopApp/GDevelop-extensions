name: GDevelop PR automatic rebuild of the extensions database
on:
  pull_request:
    types: [opened,synchronize]
jobs:
  rebuild-database:
    # Only run it on extensions submissions (tag is ensured via the new issue form)
    if: ${{ contains(github.event.pull_request.labels.*.name, '‚ú® New extension') || contains(github.event.pull_request.labels.*.name, 'üîÑ Extension update') }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Rebuild the database
        run: |
          npm i
          echo 'BUILD_LOGS<<EOF' >> $GITHUB_ENV
          node scripts/generate-extensions-registry.js --disable-exit-code >> $GITHUB_ENV
          echo 'EOF' >> $GITHUB_ENV
          echo "CHANGED="$(git diff --name-only extensions-registry.json) >> $GITHUB_ENV

      - name: Commit and push if changed
        if: ${{ contains(env.CHANGED, 'extensions-registry') }}
        run: |
          git config --global user.name '${{ github.actor }}'
          git config --global user.email '${{ github.actor }}@users.noreply.github.com'
          git add extensions-registry.json
          git commit -m "Regenerated extension registery"
          git push

      - name: Notify build errors
        if: ${{ !contains(env.BUILD_LOGS, 'successfully updated') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh pr comment ${{ github.event.pull_request.number }} --body "‚ùó Errors were detected in this submission! 

          \`\`\`${{ env.BUILD_LOGS }}
          \`\`\`"
